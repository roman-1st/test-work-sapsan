{"ast":null,"code":"var _jsxFileName = \"/Users/romansehovcev/Documents/TestsProjects/test-project-sapsan/src/components/DisplayResult.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport './DisplayResult.css';\nimport Image from \"./Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DisplayResult = () => {\n  _s();\n  const {\n    images\n  } = useTypedSelector(state => state.images);\n  console.log(images);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DisplayResult\",\n    children: images.map(el => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        element: true\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayElement\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: el.urls.small\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplayResult, \"4EVz7eK/BTGZb8KIFmZyV+Y80Pg=\", false, function () {\n  return [useTypedSelector];\n});\n_c = DisplayResult;\nexport default DisplayResult;\nvar _c;\n$RefreshReg$(_c, \"DisplayResult\");","map":{"version":3,"names":["React","useTypedSelector","Image","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayResult","_s","images","state","console","log","className","children","map","el","element","id","fileName","_jsxFileName","lineNumber","columnNumber","src","urls","small","_c","$RefreshReg$"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-sapsan/src/components/DisplayResult.tsx"],"sourcesContent":["import React from \"react\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport './DisplayResult.css'\nimport Image from \"./Image\";\n\nconst DisplayResult = () => {\n    const {images} = useTypedSelector(state => state.images)\n    console.log(images);\n\n    \n    return (\n        <div className=\"DisplayResult\">\n            {images.map (el => (\n                <>\n                <Image key={el.id} element/>\n                <div \n                className=\"displayElement\"\n                key={el.id}>\n                    <img className=\"img\"  src={el.urls.small} />\n                </div>\n                </>\n            ))}\n            {/* <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p>\n            <p> dsfsdf</p> */}\n        </div>\n    )\n}\n\nexport default DisplayResult"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAO,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAACC;EAAM,CAAC,GAAGR,gBAAgB,CAACS,KAAK,IAAIA,KAAK,CAACD,MAAM,CAAC;EACxDE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EAGnB,oBACIL,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,EACzBL,MAAM,CAACM,GAAG,CAAEC,EAAE,iBACXZ,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACAV,OAAA,CAACF,KAAK;QAAae,OAAO;MAAA,GAAdD,EAAE,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW,eAC5BlB,OAAA;QACAS,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAEtBV,OAAA;UAAKS,SAAS,EAAC,KAAK;UAAEU,GAAG,EAAEP,EAAE,CAACQ,IAAI,CAACC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG,GAD3CN,EAAE,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEJ;IAAA,gBAET;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAWA;AAEd,CAAC;AAAAd,EAAA,CA7BKD,aAAa;EAAA,QACEN,gBAAgB;AAAA;AAAAyB,EAAA,GAD/BnB,aAAa;AA+BnB,eAAeA,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}