{"ast":null,"code":"import axios from \"axios\";\nimport { ImagesActionTypes } from \"../../types/images\";\nexport const getFetchImagesAction = (title, page) => {\n  console.log(fetch);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ImagesActionTypes.LOADING_IMAGES\n      });\n      const response = await axios.get('https://api.unsplash.com/search/photos?', {\n        params: {\n          client_id: 'Ip0XA55zY7b7-d19osq1L5btGg-YCeDZVpnnJjXqHxs',\n          query: title,\n          // rel: 'first',\n          page: page,\n          per_page: '20',\n          lang: 'ru'\n        }\n      });\n      // setTimeout( () => {\n      dispatch({\n        type: ImagesActionTypes.GET_IMAGES,\n        payload: response.data.results\n      });\n      // }, 1000)\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n};\nexport const getFetchMoreImagesAction = (title, page) => {\n  const t = title;\n  console.log(page);\n  console.log(t);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ImagesActionTypes.LOADING_IMAGES\n      });\n      const response = await axios.get('https://api.unsplash.com/search/photos?', {\n        params: {\n          client_id: 'Ip0XA55zY7b7-d19osq1L5btGg-YCeDZVpnnJjXqHxs',\n          query: title,\n          per_page: '20',\n          lang: 'ru',\n          page: page,\n          rel: 'next'\n        }\n      });\n\n      // setTimeout( () => {\n      dispatch({\n        type: ImagesActionTypes.GET_MORE_IMAGES,\n        payload: response.data.results\n      });\n      // }, 1000)\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n};","map":{"version":3,"names":["axios","ImagesActionTypes","getFetchImagesAction","title","page","console","log","fetch","dispatch","type","LOADING_IMAGES","response","get","params","client_id","query","per_page","lang","GET_IMAGES","payload","data","results","e","message","getFetchMoreImagesAction","t","rel","GET_MORE_IMAGES"],"sources":["/Users/romansehovcev/Documents/GitHub/test-project-sapsan/work-test-sapsan/src/redux/action-creators/async-actions.ts"],"sourcesContent":["import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport { ImagesActions, ImagesActionTypes } from \"../../types/images\"\n\nexport const getFetchImagesAction = (title: string, page: number) => {\n    console.log(fetch);\n    \n    return async (dispatch: Dispatch<ImagesActions>) => {\n        try {\n            dispatch({type: ImagesActionTypes.LOADING_IMAGES})\n            const response = await axios.get('https://api.unsplash.com/search/photos?', {\n                params: {\n                    client_id: 'Ip0XA55zY7b7-d19osq1L5btGg-YCeDZVpnnJjXqHxs',\n                    query: title,\n                    // rel: 'first',\n                    page: page,\n                    per_page: '20',\n                    lang: 'ru',\n                }\n            })\n            // setTimeout( () => {\n                dispatch({type: ImagesActionTypes.GET_IMAGES, payload: response.data.results})\n            // }, 1000)\n            \n        } catch (e: any){\n            console.log(e.message);\n        }\n    }\n}\n\nexport const getFetchMoreImagesAction = (title: string, page: number) => {   \n    const t = title\n    console.log(page);\n    console.log(t);\n\n    return async (dispatch: Dispatch<ImagesActions>) => {\n        try {\n            dispatch({type: ImagesActionTypes.LOADING_IMAGES})\n            const response = await axios.get('https://api.unsplash.com/search/photos?', {\n                params: {\n                    client_id: 'Ip0XA55zY7b7-d19osq1L5btGg-YCeDZVpnnJjXqHxs',\n                    query: title,\n                    per_page: '20',\n                    lang: 'ru',\n                    page: page,\n                    rel: 'next',\n                }\n            })  \n            \n            \n            // setTimeout( () => {\n                dispatch({type: ImagesActionTypes.GET_MORE_IMAGES, payload: response.data.results})\n            // }, 1000)\n            \n        } catch (e: any){\n            console.log(e.message);\n        }\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAwBC,iBAAiB,QAAQ,oBAAoB;AAErE,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,KAAa,EAAEC,IAAY,KAAK;EACjEC,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAElB,OAAO,MAAOC,QAAiC,IAAK;IAChD,IAAI;MACAA,QAAQ,CAAC;QAACC,IAAI,EAAER,iBAAiB,CAACS;MAAc,CAAC,CAAC;MAClD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,yCAAyC,EAAE;QACxEC,MAAM,EAAE;UACJC,SAAS,EAAE,6CAA6C;UACxDC,KAAK,EAAEZ,KAAK;UACZ;UACAC,IAAI,EAAEA,IAAI;UACVY,QAAQ,EAAE,IAAI;UACdC,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MACF;MACIT,QAAQ,CAAC;QAACC,IAAI,EAAER,iBAAiB,CAACiB,UAAU;QAAEC,OAAO,EAAER,QAAQ,CAACS,IAAI,CAACC;MAAO,CAAC,CAAC;MAClF;IAEJ,CAAC,CAAC,OAAOC,CAAM,EAAC;MACZjB,OAAO,CAACC,GAAG,CAACgB,CAAC,CAACC,OAAO,CAAC;IAC1B;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAGA,CAACrB,KAAa,EAAEC,IAAY,KAAK;EACrE,MAAMqB,CAAC,GAAGtB,KAAK;EACfE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjBC,OAAO,CAACC,GAAG,CAACmB,CAAC,CAAC;EAEd,OAAO,MAAOjB,QAAiC,IAAK;IAChD,IAAI;MACAA,QAAQ,CAAC;QAACC,IAAI,EAAER,iBAAiB,CAACS;MAAc,CAAC,CAAC;MAClD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,yCAAyC,EAAE;QACxEC,MAAM,EAAE;UACJC,SAAS,EAAE,6CAA6C;UACxDC,KAAK,EAAEZ,KAAK;UACZa,QAAQ,EAAE,IAAI;UACdC,IAAI,EAAE,IAAI;UACVb,IAAI,EAAEA,IAAI;UACVsB,GAAG,EAAE;QACT;MACJ,CAAC,CAAC;;MAGF;MACIlB,QAAQ,CAAC;QAACC,IAAI,EAAER,iBAAiB,CAAC0B,eAAe;QAAER,OAAO,EAAER,QAAQ,CAACS,IAAI,CAACC;MAAO,CAAC,CAAC;MACvF;IAEJ,CAAC,CAAC,OAAOC,CAAM,EAAC;MACZjB,OAAO,CAACC,GAAG,CAACgB,CAAC,CAACC,OAAO,CAAC;IAC1B;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}