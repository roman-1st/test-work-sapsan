{"ast":null,"code":"var _jsxFileName = \"/Users/romansehovcev/Documents/TestsProjects/test-project-sapsan/src/components/SearchContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport './SearchContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContainer = () => {\n  _s();\n  const {\n    setRequesTitle,\n    getFetchImages\n  } = useActions();\n  const {\n    requestTitle\n  } = useTypedSelector(state => state.images);\n  useEffect(() => {\n    getFetchImages(requestTitle);\n  }, []);\n  const title = useRef(null);\n  function setTitle(e) {\n    var _title$current;\n    setRequesTitle(String((_title$current = title.current) === null || _title$current === void 0 ? void 0 : _title$current.value));\n  }\n  function getImages() {\n    getFetchImages(requestTitle);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: title,\n      onChange: e => setTitle(e),\n      onKeyDown: e => search(e),\n      type: \"text\",\n      className: \"textInputField\",\n      placeholder: \"\\u042F\\u0431\\u043B\\u043E\\u043A\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getImages(),\n      className: \"getFetch\",\n      children: \" \\u0418\\u0441\\u043A\\u0430\\u0442\\u044C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchContainer, \"v54W0Nl1f26/IjwmSPQ/h01ACxY=\", false, function () {\n  return [useActions, useTypedSelector];\n});\n_c = SearchContainer;\nexport default SearchContainer;\nvar _c;\n$RefreshReg$(_c, \"SearchContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useActions","useTypedSelector","jsxDEV","_jsxDEV","SearchContainer","_s","setRequesTitle","getFetchImages","requestTitle","state","images","title","setTitle","e","_title$current","String","current","value","getImages","className","children","ref","onChange","onKeyDown","search","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-sapsan/src/components/SearchContainer.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport './SearchContainer.css'\n\nconst SearchContainer = () => {\n\n    const {setRequesTitle, getFetchImages} = useActions()\n    const {requestTitle} = useTypedSelector (state => state.images)\n\n    useEffect( () => {\n        getFetchImages(requestTitle)\n    }, [])\n\n    const title = useRef<HTMLInputElement>(null)\n    function setTitle (e: React.ChangeEvent<HTMLInputElement>) {\n        setRequesTitle(String(title.current?.value))\n    }\n\n    function getImages () {\n        getFetchImages(requestTitle)\n    }\n\n    function search (e)\n\n    return (\n        <div \n        className=\"inputContainer\">\n            <input \n            ref={title}\n            onChange={ (e) => setTitle(e)}\n            onKeyDown={ (e) => search(e)}\n            type='text'\n            className=\"textInputField\"\n            placeholder=\"Яблоко\" /> \n            <button \n            onClick={ () => getImages()}\n            className=\"getFetch\"> Искать </button>\n        </div>\n        \n    )\n}\n\nexport default SearchContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAO,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM;IAACC,cAAc;IAAEC;EAAc,CAAC,GAAGP,UAAU,EAAE;EACrD,MAAM;IAACQ;EAAY,CAAC,GAAGP,gBAAgB,CAAEQ,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC;EAE/DZ,SAAS,CAAE,MAAM;IACbS,cAAc,CAACC,YAAY,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGZ,MAAM,CAAmB,IAAI,CAAC;EAC5C,SAASa,QAAQA,CAAEC,CAAsC,EAAE;IAAA,IAAAC,cAAA;IACvDR,cAAc,CAACS,MAAM,EAAAD,cAAA,GAACH,KAAK,CAACK,OAAO,cAAAF,cAAA,uBAAbA,cAAA,CAAeG,KAAK,CAAC,CAAC;EAChD;EAEA,SAASC,SAASA,CAAA,EAAI;IAClBX,cAAc,CAACC,YAAY,CAAC;EAChC;EAIA,oBACIL,OAAA;IACAgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBACtBjB,OAAA;MACAkB,GAAG,EAAEV,KAAM;MACXW,QAAQ,EAAIT,CAAC,IAAKD,QAAQ,CAACC,CAAC,CAAE;MAC9BU,SAAS,EAAIV,CAAC,IAAKW,MAAM,CAACX,CAAC,CAAE;MAC7BY,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,gBAAgB;MAC1BO,WAAW,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvB3B,OAAA;MACA4B,OAAO,EAAGA,CAAA,KAAMb,SAAS,EAAG;MAC5BC,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAGd,CAAC;AAAAzB,EAAA,CApCKD,eAAe;EAAA,QAEwBJ,UAAU,EAC5BC,gBAAgB;AAAA;AAAA+B,EAAA,GAHrC5B,eAAe;AAsCrB,eAAeA,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}