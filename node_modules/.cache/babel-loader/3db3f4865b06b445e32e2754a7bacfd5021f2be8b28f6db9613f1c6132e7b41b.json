{"ast":null,"code":"import { ImagesActionTypes } from '../../types/images';\nconst initialState = {\n  requestTitle: 'snow',\n  isLoading: false,\n  images: [],\n  pagination: 10,\n  modalImage: null\n};\nexport const imagesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ImagesActionTypes.SET_REQUEST_TITLE:\n      return {\n        ...state,\n        requestTitle: action.payload\n      };\n    case ImagesActionTypes.LOADING_IMAGES:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case ImagesActionTypes.GET_IMAGES:\n      return {\n        ...state,\n        isLoading: false,\n        images: [...action.payload]\n      };\n    case ImagesActionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        modalImage\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ImagesActionTypes","initialState","requestTitle","isLoading","images","pagination","modalImage","imagesReducer","state","arguments","length","undefined","action","type","SET_REQUEST_TITLE","payload","LOADING_IMAGES","GET_IMAGES","OPEN_MODAL"],"sources":["/Users/romansehovcev/Documents/TestsProjects/test-project-sapsan/src/redux/reducer/imagesReducer.ts"],"sourcesContent":["import { ImagesState, ImagesActionTypes, ImagesActions } from '../../types/images';\n\nconst initialState : ImagesState = {\n    requestTitle: 'snow',\n    isLoading: false,\n    images: [],\n    pagination: 10,\n    modalImage: null,\n}\n\nexport const imagesReducer = (state = initialState, action: ImagesActions): ImagesState => {\n    switch(action.type) {\n        case ImagesActionTypes.SET_REQUEST_TITLE:\n            return {\n                ...state,\n                requestTitle: action.payload\n            }\n\n        case ImagesActionTypes.LOADING_IMAGES: \n            return {\n                ...state,\n                isLoading: true,\n            }\n\n        case ImagesActionTypes.GET_IMAGES:\n            return {\n                ...state,\n                isLoading: false,\n                images: [...action.payload]\n            }\n        case ImagesActionTypes.OPEN_MODAL:\n            return {\n                ...state,\n                modalImage\n            }\n\n        default: \n        return {\n            ...state\n        }\n    }\n}"],"mappings":"AAAA,SAAsBA,iBAAiB,QAAuB,oBAAoB;AAElF,MAAMC,YAA0B,GAAG;EAC/BC,YAAY,EAAE,MAAM;EACpBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA8D;EAAA,IAA7DC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,YAAY;EAAA,IAAEW,MAAqB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKb,iBAAiB,CAACc,iBAAiB;MACpC,OAAO;QACH,GAAGN,KAAK;QACRN,YAAY,EAAEU,MAAM,CAACG;MACzB,CAAC;IAEL,KAAKf,iBAAiB,CAACgB,cAAc;MACjC,OAAO;QACH,GAAGR,KAAK;QACRL,SAAS,EAAE;MACf,CAAC;IAEL,KAAKH,iBAAiB,CAACiB,UAAU;MAC7B,OAAO;QACH,GAAGT,KAAK;QACRL,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE,CAAC,GAAGQ,MAAM,CAACG,OAAO;MAC9B,CAAC;IACL,KAAKf,iBAAiB,CAACkB,UAAU;MAC7B,OAAO;QACH,GAAGV,KAAK;QACRF;MACJ,CAAC;IAEL;MACA,OAAO;QACH,GAAGE;MACP,CAAC;EAAA;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}